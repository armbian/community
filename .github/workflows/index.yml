name: "Generating index"
#
# Generates index
#

on:

  schedule:

    - cron:  '0 01 * * 1'

  workflow_dispatch:
  
#  workflow_run:
#    workflows: ["Release"]
#    types:
#      - completed

env:
   GH_TOKEN: ${{ secrets.CR_PAT }}

jobs:
  
  jobsend:

    name: "Create index"
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'Armbian' }}
    steps:

      - name: Runner prepare
        uses: armbian/actions/runner-prepare@main
        
      - uses: igorjs/gh-actions-clean-workflow@v3
        with:
          token: ${{ secrets.CR_PAT }}
          days_old: 14

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          repository: armbian/build
          ref: nightly
          path: build
          clean: false

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          repository: armbian/community
          path: community
          clean: false

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_KEY2 }}
          passphrase: ${{ secrets.GPG_PASSPHRASE2 }}
          workdir: community
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Make build list
        run: |

          function listings
          {
          cd community
          gh release view --json assets 2>/dev/null | python3 -mjson.tool | sed  '1,2d;$d' | json -ga name url size updatedAt -d, | sort | grep $3 | (
          while read -r line; do
                  name=$(echo $line | cut -d"," -f1 | awk '{print tolower($0)}')
                  url=$(echo $line | cut -d"," -f2)
                  size=$(echo $line | cut -d"," -f3)
                  updated=$(echo $line | cut -d"," -f4)
                    if [[ "${name: -3}" == ".xz" ]]; then
                      board_name=$(echo $name | cut -d"_" -f3)
                      source ../build/config/boards/$board_name.*
                      out_release=$(echo $name | cut -d"_" -f4)
                      out_branch=$(echo $name | cut -d"_" -f5)
                      out_kernel=$(echo $name | cut -d"_" -f6-7 | cut -d"." -f1-3 | cut -d"_" -f1)
                      out_desktop=$(echo $name | cut -d"_" -f7- | cut -d"." -f1 | cut -d"_" -f1)
                      out_size=$(echo "scale=0; $size/1024/1024" | bc -l)"M"
                      # outputs
                      echo -ne "${board_name}/${out_release^}_${out_branch}$([[ -n "${out_desktop}" ]] && echo "_")${out_desktop}_nightly|$url|"$(date -d $updated +"%s")"|$out_size|\n" >> $1
                      out_desktop=${out_desktop:-cli}
                      echo -ne "| [$BOARD_NAME]($url#$board_name) | [:file_folder:]($url".asc") | [:file_folder:]($url".sha") | $out_release | $out_branch | $out_desktop | $out_size | $out_kernel |\n" >> $2
                    fi
                    done
                    )
          cd ..
          }
          
          truncate community/data.csv --size=0 || true
          sudo npm install --location=global json || true          
          VERSION=$(date +%Y%U)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          cat community/.github/header.inc > community/README.md
          echo -en "&nbsp;\n\n" >> community/README.md
          cat community/.github/memo.inc >> community/README.md
          echo -en "&nbsp;\n\n" >> community/README.md
          echo -e "\n# Generic / popular\n"  >> community/README.md
          echo "| Image &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | GPG | SHA | Release | Branch | &nbsp;&nbsp;&nbsp; Variant | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Size | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Kernel |" >> community/README.md
          echo "| --- | :--: | :--: | --: | --: | --: | --: | --: |" >> community/README.md
          listings "data.csv" "README.md" "Uefi\|Rpi4b"
          echo -e "<br>\n\n# Optimized \n\n" >> community/README.md
          echo "| Image &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | GPG | SHA | Release | Branch | &nbsp;&nbsp;&nbsp; Variant | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Size | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Kernel |" >> community/README.md
          echo "| --- | :--: | :--: | --: | --: | --: | --: | --: |" >> community/README.md
          listings "data.csv" "README.md" "-v Uefi\|Rpi4b"          
          echo -en "\n\n&nbsp;" >> community/README.md
          cat community/.github/footer.inc >> community/README.md
        
      - uses: ncipollo/release-action@v1
        with:
          tag: "${{ env.VERSION }}"
          bodyFile: "community/.github/Releases.md"
          name: "Community ${{ env.VERSION }}"
          allowUpdates: true
          token: ${{ secrets.CR_PAT }}

      - name: Update scripts
        run: |
          cd community
          sudo chown -R $USER:$USER .git
          if git status --porcelain | grep .; then
             git config --global user.email "info@armbian.com"
             git config --global user.name "Armbianworker"
             git config pull.rebase false
             git pull
             git add .
             git commit --allow-empty -m "Update index"
             git push
          fi
